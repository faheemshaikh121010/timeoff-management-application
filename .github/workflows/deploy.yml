name: Deploy to AWS ECS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.ecr.outputs.registry }}/timeoff-app:latest

<<<<<<< HEAD
    - name: Run terraform init
      working-directory: infra-terraform # Add this line to specify the correct path
      run: |
        terraform init
=======
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Apply (auto-approve)
      run: terraform apply -auto-approve
      working-directory: terraform

    - name: Get Task Definition ARN from Terraform Output
      id: tfoutput
      run: |
        echo "task_def_arn=$(terraform -chdir=terraform output -raw task_definition_arn)" >> $GITHUB_OUTPUT
>>>>>>> 90b96daaed47e1fb0a345490e9e5fa855be1dade

    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
<<<<<<< HEAD
        task-definition: terraform/task-definition.json
        service: timeoff-app
=======
        task-definition: ${{ steps.tfoutput.outputs.task_def_arn }}
        service: timeoff-service
>>>>>>> 90b96daaed47e1fb0a345490e9e5fa855be1dade
        cluster: timeoff-cluster
        wait-for-service-stability: true
